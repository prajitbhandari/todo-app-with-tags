exit
c
before_todo.id
c
todo_count_before-1
todo_count_before
c
todo_count_before
Todo.with_deleted
todo_count_before
todo_before
c
todo_before
c
before_todo_count
c
before_todo_count
c
page.find("#item#{subject_todo.id}").style('color').value
page.find("#item#{subject_todo.id}").style('color').to_s.text
page.find("#item#{subject_todo.id}").style('color').to_s
page.find("#item#{subject_todo.id}").style('color').text.to_s
page.find("#item#{subject_todo.id}").style('color').string
page.find("#item#{subject_todo.id}").style('color').text
page.find("#item#{subject_todo.id}").
page.find("#item#{subject_todo.id}").text.color
page.find("#item#{subject_todo.id}").text
page.find("#item#{subject_todo.id}").style('color')
page.find("#item#{subject_todo.id}")
page.find("#item#{subject_todo.id}".style('color'))
page.find("#item#{subject_todo.id}".color)
page.find("#item#{subject_todo.id}").style('color')
page.find("#item#{subject_todo.id}").color
page.find("#item#{subject_todo.id}"
page.find("#item#{subject_todo.id}").color
c
cc
c
page.find("#item#{subject_todo.id}").style('color')
page.find("#item#{subject_todo.id}").color
page.find("#item#{subject_todo.id}").text
page.find("#item#{subject_todo.id}")
page.find("#item#{subject_todo.id}"
c
page.find('.markItem')
c
n
subject_todo.id
c
n
find(".markItem")
c
n
c
subject_todo.id
n
new_todo_item
c
new_todo_item.item
new_todo_item.id
new_todo_item
c
subject_todo.reload
c
before_todo_count
before_todo
c
Todo.size
Todo.count
Todo.with_deleted.count
before_todo_count
c
page.all("delete").count
page.all("Delete").count
page.all("Destroy").count
page.all(".markItem").count
page.all("tr").count
page.all("td").count
page.all("tr").count
page.all(".markItem").count
page.all.count
page.all
c
Todo.with_deleted.count
Todo.count
subject_todo_items
c
subject_todo_items.reload.count
subject_todo_items
subject_todo_items.count
c
Todo.with_deleted.reload
subject_todo_items.reload
(Todo.all.reload)
Todo.all.reload
Todo.reload
{Todo.reload}
{Todo.all.reload}
{subject_todo_items.reload}
subject_todo_items.reload
n
subject_todo_items
c
subject_todo_items
c
todo_count
c
todo_count
c
todo_count
c
subject_todo_items
c
Todo.count
subject_todo_items
c
subject_todo
subject_todo_items
c
subject_todo.size
subject_todo.count
subject_todo
c
page.all(".markItem").size
page.all(".markItem").reload.size
pg_count
page_count
c
pg_count
load
reload!
page_count
c
n
page_count
c
n
page_count
n
page_count
exit
page.all(".markItem").size
Page.all(".markItem").size
c
page.all(".markItem").size
page.all(".markItem).size
c
expect{Todo.with_deleted.size}
c
expect(Todo.all.size).to change(Todo, :count).by(-1)
expect(Todo.all.size)
expect(Todo.all, :count)
expect(Todo, :count)
expect(Todo).to change(Todo, :count).by(-1)
c
Todo.all
n
Todo.all
n
Todo.all
n
Todo.all
n
c
cc
n
Todo.all
c
Todo.all
clear
Todo.all
n
Todo.all
n
Todo.all
c
find_link("Destroy")
page.find_link("Destroy")
c
find("a[href=$='Recover']")
page.find("a[href=$='Recover']")
c
page.find("a[href=$='Destroy']")
page.find("a[href=$='Recover']")
find("a[href=$='Recover']")
find('a[href=$="Destroy"]')
c
page.find(:xpath,"//*[text()='Destroy']")
c
n
expect(subject_todo.reload.deleted_at).not_to be nil
n
subject_todo.reload
n
c
subject_todo.reload.deleted_at
subject_todo.deleted_at
c
subject_todo.reload.deleted_at
subject_todo.deleted_at
subject_todo.reload
c
subject_todo.reload.deleted_at
expect(subject_todo.reload.deleted_at)
expect(subject_todo.reload.deleted_at).not_to be nil
n
c
expect(subject_todo.reload.deleted_at)
expect(subject_todo.reload)
expect(subject_todo)
c
expect(subject_todo)
expect(subject_todo.reload)
expect(subject_todo)
expect(subject_todo.deleted_at)
expect(subject_todo.reload.deleted_at)
c
expect(subject_todo.deleted_at).reload.not_to be nil
expect(subject_todo.deleted_at)
expect(subject_todo.deleted_at).reload
n
c
subject_todo.reload.deleted_at.class.ancestors
subject_todo.reload.deleted_at.class
subject_todo.reload.deleted_at
c
subject_todo.reload
subject_todo
subject_todo.deleted_at
subject_todo.item
c
n
c
n
a
n
a
c
v
n
i
c
n
exit
Todo.all
:item
c
n
idCount
n
idCount
n
idCount
n
idCount
c
